{"version":3,"sources":["LineBreaker.js","App.js","reportWebVitals.js","index.js"],"names":["LineBreaker","text","setText","useState","charCount","setCharCount","savedTexts","setSavedTexts","useEffect","storedTexts","JSON","parse","localStorage","getItem","React","createElement","Box","className","sx","p","Helmet","name","content","property","mb","Typography","variant","gutterBottom","TextField","id","fullWidth","multiline","rows","value","onChange","event","target","length","Button","color","onClick","handleCopy","textToCopy","replace","trimStart","startsWith","concat","navigator","clipboard","writeText","alert","newSavedTexts","setItem","stringify","mt","List","map","savedText","index","ListItem","key","divider","ListItemText","primary","IconButton","edge","aria-label","handleLoad","FileCopyIcon","filter","_","i","handleDelete","DeleteIcon","App","activePage","setActivePage","AppBar","position","Toolbar","style","flexGrow","page","handleMenuClick","Container","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.028627f3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, TextField, Button, Box, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\n\nconst LineBreaker = () => {\n    const [text, setText] = useState('');\n    const [charCount, setCharCount] = useState(0);\n    const [savedTexts, setSavedTexts] = useState([]);\n\n    useEffect(() => {\n        const storedTexts = JSON.parse(localStorage.getItem('savedTexts')) || [];\n        setSavedTexts(storedTexts);\n    }, []);\n\n    const handleChange = (event) => {\n        setText(event.target.value);\n        setCharCount(event.target.value.length);\n    };\n\n    const handleCopy = () => {\n        let textToCopy = text.replace(/\\u2800/g, '\\u2800\\n').trimStart();\n        if (!textToCopy.startsWith('\\u2800\\n')) {\n            textToCopy = `\\u2800\\n${textToCopy}`;\n        }\n        navigator.clipboard.writeText(textToCopy);\n        alert('Copied');\n\n        const newSavedTexts = [...savedTexts, text];\n        setSavedTexts(newSavedTexts);\n        localStorage.setItem('savedTexts', JSON.stringify(newSavedTexts));\n    };\n\n    const handleLoad = (savedText) => {\n        setText(savedText);\n        setCharCount(savedText.length);\n    };\n\n    const handleDelete = (index) => {\n        const newSavedTexts = savedTexts.filter((_, i) => i !== index);\n        setSavedTexts(newSavedTexts);\n        localStorage.setItem('savedTexts', JSON.stringify(newSavedTexts));\n    };\n\n    return (\n        <Box className=\"container\" sx={{ p: 2 }}>\n            <Helmet>\n                <title>Instagram Line Breaker - First Line Break for Instagram Captions</title>\n                <meta name=\"description\" content=\"Easily add line breaks to your Instagram captions with our Instagram Line Breaker tool. Perfect for creating aesthetically pleasing and readable Instagram posts.\" />\n                <meta name=\"keywords\" content=\"Instagram, line break, caption, Instagram tool, Instagram captions, Instagram formatting\" />\n                <meta name=\"author\" content=\"Your Name or Your Website Name\" />\n\n                <meta property=\"og:title\" content=\"Instagram Line Breaker - First Line Break for Instagram Captions\" />\n                <meta property=\"og:description\" content=\"Easily add line breaks to your Instagram captions with our Instagram Line Breaker tool. Perfect for creating aesthetically pleasing and readable Instagram posts.\" />\n                <meta property=\"og:image\" content=\"URL to an image representing your site\" />\n                <meta property=\"og:url\" content=\"https://helper-instagram.github.io\" />\n                <meta property=\"og:type\" content=\"website\" />\n                \n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\n                <meta name=\"twitter:title\" content=\"Instagram Line Breaker - First Line Break for Instagram Captions\" />\n                <meta name=\"twitter:description\" content=\"Easily add line breaks to your Instagram captions with our Instagram Line Breaker tool. Perfect for creating aesthetically pleasing and readable Instagram posts.\" />\n                <meta name=\"twitter:image\" content=\"URL to an image representing your site\" />\n            </Helmet>\n            <Box className=\"textarea-section\" sx={{ mb: 2 }}>\n                <Typography variant=\"h5\" gutterBottom>\n                    First Line Break for Instagram Captions\n                </Typography>\n                <TextField\n                    id=\"textarea\"\n                    variant=\"outlined\"\n                    fullWidth\n                    multiline\n                    rows={10}\n                    value={text}\n                    onChange={handleChange}\n                    sx={{ mb: 2 }}\n                />\n                <Button variant=\"contained\" color=\"primary\" onClick={handleCopy} sx={{ mb: 2 }}>\n                    Copy to Clipboard\n                </Button>\n                <Typography className=\"char-count\">\n                    Max Length â€” {charCount} of 2200\n                </Typography>\n            </Box>\n            {savedTexts.length > 0 && (\n                <Box className=\"saved-texts\" sx={{ mt: 2 }}>\n                    <Typography variant=\"h5\" gutterBottom>\n                        Saved Texts\n                    </Typography>\n                    <List>\n                        {savedTexts.map((savedText, index) => (\n                            <ListItem key={index} divider>\n                                <ListItemText primary={savedText} />\n                                <IconButton edge=\"end\" aria-label=\"load\" onClick={() => handleLoad(savedText)}>\n                                    <FileCopyIcon />\n                                </IconButton>\n                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDelete(index)}>\n                                    <DeleteIcon />\n                                </IconButton>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default LineBreaker;\n","import React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Container, Button } from '@mui/material';\nimport LineBreaker from './LineBreaker';\n\nfunction App() {\n    const [activePage, setActivePage] = useState('newline');\n\n    const handleMenuClick = (page) => {\n        setActivePage(page);\n    };\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n                        HELPER.INSTAGRAM\n                    </Typography>\n                    <Button color=\"inherit\" onClick={() => handleMenuClick('newline')}>First Line Breaker</Button>\n                </Toolbar>\n            </AppBar>\n            <Container>\n                {activePage === 'newline' && <LineBreaker />}\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}