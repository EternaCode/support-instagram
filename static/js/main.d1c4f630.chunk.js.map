{"version":3,"sources":["LineBreaker.js","App.js","reportWebVitals.js","index.js"],"names":["LineBreaker","text","setText","useState","charCount","setCharCount","savedTexts","setSavedTexts","useEffect","storedTexts","JSON","parse","localStorage","getItem","React","createElement","Box","className","sx","p","Helmet","name","content","property","mb","display","flexDirection","alignItems","Typography","variant","gutterBottom","width","maxWidth","border","borderRadius","overflow","style","position","fontWeight","paddingLeft","TextField","id","fullWidth","multiline","rows","value","onChange","event","target","length","& textarea","padding","paddingTop","backgroundColor","fontSize","lineHeight","whiteSpace","wordBreak","Button","color","onClick","handleCopy","textToCopy","replace","trimStart","startsWith","concat","navigator","clipboard","writeText","alert","newSavedTexts","setItem","stringify","mt","List","map","savedText","index","ListItem","key","divider","ListItemText","primary","IconButton","edge","aria-label","handleLoad","FileCopyIcon","filter","_","i","handleDelete","DeleteIcon","App","activePage","setActivePage","AppBar","Toolbar","flexGrow","page","handleMenuClick","Container","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1c4f630.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, TextField, Button, Box, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\n\nconst LineBreaker = () => {\n    const [text, setText] = useState('');\n    const [charCount, setCharCount] = useState(0);\n    const [savedTexts, setSavedTexts] = useState([]);\n\n    useEffect(() => {\n        const storedTexts = JSON.parse(localStorage.getItem('savedTexts')) || [];\n        setSavedTexts(storedTexts);\n    }, []);\n\n    const handleChange = (event) => {\n        setText(event.target.value);\n        setCharCount(event.target.value.length);\n    };\n\n    const handleCopy = () => {\n        let textToCopy = text.replace(/\\u2800/g, '\\u2800\\n').trimStart();\n        if (!textToCopy.startsWith('\\u2800\\n')) {\n            textToCopy = `\\u2800\\n${textToCopy}`;\n        }\n        navigator.clipboard.writeText(textToCopy);\n        alert('Copied');\n\n        const newSavedTexts = [...savedTexts, text];\n        setSavedTexts(newSavedTexts);\n        localStorage.setItem('savedTexts', JSON.stringify(newSavedTexts));\n    };\n\n    const handleLoad = (savedText) => {\n        setText(savedText);\n        setCharCount(savedText.length);\n    };\n\n    const handleDelete = (index) => {\n        const newSavedTexts = savedTexts.filter((_, i) => i !== index);\n        setSavedTexts(newSavedTexts);\n        localStorage.setItem('savedTexts', JSON.stringify(newSavedTexts));\n    };\n\n    return (\n        <Box className=\"container\" sx={{ p: 2 }}>\n            <Helmet>\n                <title>Instagram Line Breaker - First Line Break for Instagram Captions</title>\n                <meta name=\"description\" content=\"Easily add line breaks to your Instagram captions with our Instagram Line Breaker tool. Perfect for creating aesthetically pleasing and readable Instagram posts.\" />\n                <meta name=\"keywords\" content=\"Instagram, line break, caption, Instagram tool, Instagram captions, Instagram formatting\" />\n                <meta name=\"author\" content=\"Your Name or Your Website Name\" />\n\n                <meta property=\"og:title\" content=\"Instagram Line Breaker - First Line Break for Instagram Captions\" />\n                <meta property=\"og:description\" content=\"Easily add line breaks to your Instagram captions with our Instagram Line Breaker tool. Perfect for creating aesthetically pleasing and readable Instagram posts.\" />\n                <meta property=\"og:image\" content=\"URL to an image representing your site\" />\n                <meta property=\"og:url\" content=\"https://helper-instagram.github.io\" />\n                <meta property=\"og:type\" content=\"website\" />\n                \n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\n                <meta name=\"twitter:title\" content=\"Instagram Line Breaker - First Line Break for Instagram Captions\" />\n                <meta name=\"twitter:description\" content=\"Easily add line breaks to your Instagram captions with our Instagram Line Breaker tool. Perfect for creating aesthetically pleasing and readable Instagram posts.\" />\n                <meta name=\"twitter:image\" content=\"URL to an image representing your site\" />\n            </Helmet>\n            <Box className=\"textarea-section\" sx={{ mb: 2, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <Typography variant=\"h5\" gutterBottom>\n                    First Line Break for Instagram\n                </Typography>\n                <Box sx={{ width: '100%', maxWidth: 600, border: '1px solid #ddd', borderRadius: 2, overflow: 'hidden', mb: 2 }}>\n                    <p style={{\n                        position:'absolute',\n                        fontWeight:'bold',\n                        display:'inline-block',\n                        paddingLeft: '28px',\n                    }}>\n                        username\n                    </p>\n                    <TextField\n                        id=\"textarea\"\n                        variant=\"outlined\"\n                        fullWidth\n                        multiline\n                        rows={10}\n                        value={text}\n                        onChange={handleChange}\n                        sx={{\n                            mb: 0,\n                            '& textarea': {\n                                padding: 2,\n                                paddingTop: 3,\n                                backgroundColor:'transparent',\n                                fontSize: '14px',\n                                lineHeight: '1.5',\n                                whiteSpace: 'pre-wrap',\n                                wordBreak: 'break-word',\n                            }\n                        }}\n                    />\n                </Box>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleCopy} sx={{ mb: 2 }}>\n                    Copy to Clipboard\n                </Button>\n                <Typography className=\"char-count\">\n                    Max Length â€” {charCount} of 2200\n                </Typography>\n            </Box>\n            {savedTexts.length > 0 && (\n                <Box className=\"saved-texts\" sx={{ mt: 2 }}>\n                    <Typography variant=\"h5\" gutterBottom>\n                        Saved Texts\n                    </Typography>\n                    <List>\n                        {savedTexts.map((savedText, index) => (\n                            <ListItem key={index} divider>\n                                <ListItemText primary={savedText} />\n                                <IconButton edge=\"end\" aria-label=\"load\" onClick={() => handleLoad(savedText)}>\n                                    <FileCopyIcon />\n                                </IconButton>\n                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDelete(index)}>\n                                    <DeleteIcon />\n                                </IconButton>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default LineBreaker;\n","import React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Container, Button } from '@mui/material';\nimport LineBreaker from './LineBreaker';\n\nfunction App() {\n    const [activePage, setActivePage] = useState('newline');\n\n    const handleMenuClick = (page) => {\n        setActivePage(page);\n    };\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n                        HELPER.INSTAGRAM\n                    </Typography>\n                    <Button color=\"inherit\" onClick={() => handleMenuClick('newline')}>First Line Breaker</Button>\n                </Toolbar>\n            </AppBar>\n            <Container>\n                {activePage === 'newline' && <LineBreaker />}\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}